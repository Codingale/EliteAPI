on: release
name: 'Release'

jobs:
  sync-version:
    name: Sync version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update project version
        uses: roryprimrose/set-vs-sdk-project-version@v1.0.3
        with: 
          version: ${{ github.event.release.tag_name }}
          projectFilter: 'EliteAPI.csproj'

  setup-dotnet:
    name: Setup .NET
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
  
  setup-nuget:
    name: Setup NuGet
    runs-on: ubuntu-latest
    steps:
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
        with:
          nuget-api-key: ${{ secrets.NUGET_KEY }}
          nuget-version: 'latest'

  build:
    needs: [ sync-version, setup-dotnet ]
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: dotnet publish
  
  add-to-release:
    needs: [ build ]
    name: Add asset to release
    runs-on: ubuntu-latest
    steps:
    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: '.\EliteAPI\bin\Debug\netstandard2.0\publish\EliteAPI.dll'
      
  pack-nuget:
    needs: [ setup-nuget, build ]
    name: Pack project
    runs-on: ubuntu-latest
    steps:
      - name: Pack project
        run: nuget pack .\EliteAPI\
  
  publish-nuget:
    needs: [ pack-nuget ]
    name: Publish to NuGet
    runs-on: ubuntu-latest
    steps:
      - name: Publish project
        run: nuget push .\EliteAPI\EliteAPI.${{ github.event.release.tag_name }}.nupkg